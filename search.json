[{"title":"使用 Hexo 搭建 Blog","date":"2020-12-02T11:20:15.000Z","url":"/2020/12/02/%E4%BD%BF%E7%94%A8-Hexo-%E6%90%AD%E5%BB%BA-Blog/","content":"准备 这时候就可以在 localhost:4000 查看网页了，但这时候只有一篇 《Hello World》。 配置主题我使用的主题是 Suka ，根据官方文档配置。 开始写文章 部署到 GitHub Pages这里我使用的是私有仓库 npm i hexo-deploy-git 在 blog 文件中的 _config.yml 添加（覆盖）如下配置 在 source 文件下创建一个 README.md 文件，然后在 _config.yml 中的 skip_render 中添加 README.md 运行 hexo clean &amp;&amp; hexo deploy 这时候在 username.github.io 上可以查看部署的网页 因为 github page 的 CDN 使用的是 Fastly 在国内访问不是很理想，所以要优化(PS: 是不是优化错方向了…) 优化 JS &amp; CSS blog 的 css 和 js 文件其实都可以通过 jsDelibr CDN 加速，suka 主题的文档也有关于 CDN 配置的说明，对于部署在 github 的文件，可以直接使用  这样的形式来访问，当然其中的的 repo@version 指的是发行的版本号，也可以直接更换成文件名。 图床 在打开网页的时候，除了 github page 感人的加载速度，其中的图片也占用了很多时间。 在这里是使用了阿里云 OSS 和 pic-go-core 来在 typora 写 markdown 文档，方便之处可以直接拖拽图片到 typora 中生成链接 确保 typora 的版本号在 0.9.86 以上 然后在 File &gt; Preferences &gt; image 设置 配置 Config File ，参考 注册阿里云账号配置 后记本来准备使用 Gatsby 的，但是网络问题和系统问题，Google 了多次决定放弃了，本次配置的问题就是 Github page 在国内的访问速度感人，还有 Blog 需要多备份。 参考 将 Hexo 部署到 GitHub Pages 使用 Gatsby 搭建个人网站指南 "}]